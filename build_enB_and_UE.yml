---
-   hosts: oaisim-enB
    become: yes
    remote_user: root
    vars:
        COPY_RIGHT: 'ciromacedo@gmail.com'
        build_with_dependecies: 'false'
        num_ues: ''
        BASE_DIR_INSTALL_ENB : "ansible_enB"
        BASE_DIR_INSTALL_UE : "ansible_ue"
    tasks:
        - fail: 
            msg: "'physical_network_interface' not found, this parameter is required!"
          when: physical_network_interface == ''
       
          - fail: 
            msg: "'num_ues' not found, this parameter is required!"
          when: num_ues == ''
          
        - name : Remove all old implantation
          become: true
          ignore_errors: true
          shell:  |
                sudo rm -rf {{ BASE_DIR_INSTALL_ENB }}
                sudo rm -rf {{ BASE_DIR_INSTALL_UE }}

        - name : Create enB Directory
          become: true
          shell:  |
                sudo mkdir {{ BASE_DIR_INSTALL_ENB }}
                sudo mkdir {{ BASE_DIR_INSTALL_UE }}

        - name  : Clone openairinterface5g repository - https://gitlab.eurecom.fr/oai/openairinterface5g/
          shell:  git clone --branch v1.0.0 https://gitlab.eurecom.fr/oai/openairinterface5g/ 
          args:
            chdir: "{{ BASE_DIR_INSTALL_ENB }}" 

        - name  : Copy enB code to UE
          shell:  cp -r {{ BASE_DIR_INSTALL_ENB }}/openairinterface5g/ {{ BASE_DIR_INSTALL_UE }}/

        - name  : Install enB - Remove rcc.band7.tm1.nfapi.conf file
          shell:  rm openairinterface5g/ci-scripts/conf_files/rcc.band7.tm1.nfapi.conf 
          args:
            chdir: "{{ BASE_DIR_INSTALL_ENB }}" 

        - name  : Config enB - Build rcc.band7.tm1.nfapi.conf
          copy:
            dest: "{{ BASE_DIR_INSTALL_ENB }}/openairinterface5g/ci-scripts/conf_files/rcc.band7.tm1.nfapi.conf"
            content: |
                Active_eNBs = ( "eNB-Eurecom-LTEBox");
                # Asn1_verbosity, choice in: none, info, annoying
                Asn1_verbosity = "none";

                eNBs =
                (
                {
                    ////////// Identification parameters:
                    eNB_ID    =  0xe00;

                    cell_type =  "CELL_MACRO_ENB";

                    eNB_name  =  "eNB-Eurecom-LTEBox";

                    // Tracking area code, 0x0000 and 0xfffe are reserved values
                    tracking_area_code = 1;

                    plmn_list = ( { mcc = 208; mnc = 93; mnc_length = 2; } );

                    tr_s_preference     = "local_mac"

                    ////////// Physical parameters:

                    component_carriers = (
                    {
                    node_function                       = "3GPP_eNODEB";
                    node_timing                         = "synch_to_ext_device";
                    node_synch_ref                      = 0;
                    frame_type					                = "FDD";
                    tdd_config 					                = 3;
                    tdd_config_s            			      = 0;
                    prefix_type             			      = "NORMAL";
                    eutra_band              			      = 7;
                    downlink_frequency      			      = 2685000000L;
                    uplink_frequency_offset 			      = -120000000;
                    Nid_cell					                  = 0;
                    N_RB_DL                 			      = 50;
                    Nid_cell_mbsfn          			      = 0;
                    nb_antenna_ports                    = 1;
                    nb_antennas_tx          			      = 1;
                    nb_antennas_rx          			      = 1;
                    tx_gain                             = 90;
                    rx_gain                             = 125;
                    pbch_repetition                     = "FALSE";
                    prach_root              			      = 0;
                    prach_config_index      			      = 0;
                    prach_high_speed        			      = "DISABLE";
                    prach_zero_correlation  			      = 1;
                    prach_freq_offset       			      = 2;
                    pucch_delta_shift       			      = 1;
                    pucch_nRB_CQI           			      = 0;
                    pucch_nCS_AN            			      = 0;
                    pucch_n1_AN             			      = 0;
                    pdsch_referenceSignalPower 			    = -27;
                    pdsch_p_b                  			    = 0;
                    pusch_n_SB                 			    = 1;
                    pusch_enable64QAM          			    = "DISABLE";
                    pusch_hoppingMode                   = "interSubFrame";
                    pusch_hoppingOffset                 = 0;
                    pusch_groupHoppingEnabled  			    = "ENABLE";
                    pusch_groupAssignment      			    = 0;
                    pusch_sequenceHoppingEnabled		   	= "DISABLE";
                    pusch_nDMRS1                        = 1;
                    phich_duration                      = "NORMAL";
                    phich_resource                      = "ONESIXTH";
                    srs_enable                          = "DISABLE";
                    /*  srs_BandwidthConfig             =;
                    srs_SubframeConfig                  =;
                    srs_ackNackST                       =;
                    srs_MaxUpPts                        =;*/

                    pusch_p0_Nominal                    = -96;
                    pusch_alpha                         = "AL1";
                    pucch_p0_Nominal                    = -104;
                    msg3_delta_Preamble                 = 6;
                    pucch_deltaF_Format1                = "deltaF2";
                    pucch_deltaF_Format1b               = "deltaF3";
                    pucch_deltaF_Format2                = "deltaF0";
                    pucch_deltaF_Format2a               = "deltaF0";
                    pucch_deltaF_Format2b		    	      = "deltaF0";

                    rach_numberOfRA_Preambles           = 64;
                    rach_preamblesGroupAConfig          = "DISABLE";
                    /*
                    rach_sizeOfRA_PreamblesGroupA       = ;
                    rach_messageSizeGroupA              = ;
                    rach_messagePowerOffsetGroupB       = ;
                    */
                    rach_powerRampingStep                       = 4;
                    rach_preambleInitialReceivedTargetPower     = -108;
                    rach_preambleTransMax                       = 10;
                    rach_raResponseWindowSize                   = 10;
                    rach_macContentionResolutionTimer           = 48;
                    rach_maxHARQ_Msg3Tx                         = 4;

                    pcch_default_PagingCycle                    = 128;
                    pcch_nB                                     = "oneT";
                    bcch_modificationPeriodCoeff			          = 2;
                    ue_TimersAndConstants_t300			            = 1000;
                    ue_TimersAndConstants_t301			            = 1000;
                    ue_TimersAndConstants_t310			            = 1000;
                    ue_TimersAndConstants_t311			            = 10000;
                    ue_TimersAndConstants_n310			            = 20;
                    ue_TimersAndConstants_n311			            = 1;
                    ue_TransmissionMode                         = 1;

                    //Parameters for SIB18
                    rxPool_sc_CP_Len                            = "normal";
                    rxPool_sc_Period                            = "sf40";
                    rxPool_data_CP_Len                          = "normal";
                    rxPool_ResourceConfig_prb_Num               = 20;
                    rxPool_ResourceConfig_prb_Start             = 5;
                    rxPool_ResourceConfig_prb_End               = 44;
                    rxPool_ResourceConfig_offsetIndicator_present = "prSmall";
                    rxPool_ResourceConfig_offsetIndicator_choice  = 0;
                    rxPool_ResourceConfig_subframeBitmap_present  = "prBs40";
                    rxPool_ResourceConfig_subframeBitmap_choice_bs_buf  = "00000000000000000000";
                    rxPool_ResourceConfig_subframeBitmap_choice_bs_size = 5;
                    rxPool_ResourceConfig_subframeBitmap_choice_bs_bits_unused  = 0;
                /*    rxPool_dataHoppingConfig_hoppingParameter                 = 0;
                    rxPool_dataHoppingConfig_numSubbands                        = "ns1";
                    rxPool_dataHoppingConfig_rbOffset                           = 0;
                    rxPool_commTxResourceUC-ReqAllowed                          = "TRUE";
                */
                    // Parameters for SIB19
                    discRxPool_cp_Len                                           = "normal"
                    discRxPool_discPeriod                                       = "rf32"
                    discRxPool_numRetx                                          = 1;
                    discRxPool_numRepetition                                    = 2;
                    discRxPool_ResourceConfig_prb_Num                           = 5;
                    discRxPool_ResourceConfig_prb_Start                         = 3;
                    discRxPool_ResourceConfig_prb_End                           = 21;
                    discRxPool_ResourceConfig_offsetIndicator_present           = "prSmall";
                    discRxPool_ResourceConfig_offsetIndicator_choice            = 0;
                    discRxPool_ResourceConfig_subframeBitmap_present            = "prBs40";
                    discRxPool_ResourceConfig_subframeBitmap_choice_bs_buf      = "f0ffffffff";
                    discRxPool_ResourceConfig_subframeBitmap_choice_bs_size     = 5;
                    discRxPool_ResourceConfig_subframeBitmap_choice_bs_bits_unused  = 0;

                    }
                    );


                    srb1_parameters :
                    {
                        # timer_poll_retransmit = (ms) [5, 10, 15, 20,... 250, 300, 350, ... 500]
                        timer_poll_retransmit    = 80;

                        # timer_reordering = (ms) [0,5, ... 100, 110, 120, ... ,200]
                        timer_reordering         = 35;

                        # timer_reordering = (ms) [0,5, ... 250, 300, 350, ... ,500]
                        timer_status_prohibit    = 0;

                        # poll_pdu = [4, 8, 16, 32 , 64, 128, 256, infinity(>10000)]
                        poll_pdu                 =  4;

                        # poll_byte = (kB) [25,50,75,100,125,250,375,500,750,1000,1250,1500,2000,3000,infinity(>10000)]
                        poll_byte                =  99999;

                        # max_retx_threshold = [1, 2, 3, 4 , 6, 8, 16, 32]
                        max_retx_threshold       =  4;
                    }

                    # ------- SCTP definitions
                    SCTP :
                    {
                        # Number of streams to use in input/output
                        SCTP_INSTREAMS  = 2;
                        SCTP_OUTSTREAMS = 2;
                    };


                    ////////// MME parameters:
                    mme_ip_address      = ( { ipv4       = "CI_MME_IP_ADDR";
                                            ipv6       = "192:168:30::17";
                                            active     = "yes";
                                            preference = "ipv4";
                                            }
                                        );

                    NETWORK_INTERFACES :
                    {
                        ENB_INTERFACE_NAME_FOR_S1_MME            = "{{ physical_network_interface }}";
                        ENB_IPV4_ADDRESS_FOR_S1_MME              = "{{ ansible_default_ipv4.address }}";
                        ENB_INTERFACE_NAME_FOR_S1U               = "{{ physical_network_interface }}";
                        ENB_IPV4_ADDRESS_FOR_S1U                 = "{{ ansible_default_ipv4.address }}";
                        ENB_PORT_FOR_S1U                         = 2152; # Spec 2152
                        ENB_IPV4_ADDRESS_FOR_X2C                 = "{{ ansible_default_ipv4.address }}";
                        ENB_PORT_FOR_X2C                         = 36422; # Spec 36422
                        
                    };
                }
                );

                MACRLCs = (
                    {
                    num_cc = 1;
                        local_s_if_name  = "lo:";			  
                        remote_s_address = "127.0.0.1";
                        local_s_address  = "127.0.0.2"; 
                        local_s_portc    = 50001;	
                        remote_s_portc   = 50000;
                        local_s_portd    = 50011;	
                        remote_s_portd   = 50010;
                    tr_s_preference = "nfapi";
                    tr_n_preference = "local_RRC";
                        }  
                );

                RUs = (
                    {
                        local_rf       = "yes"
                        nb_tx          = 1
                        nb_rx          = 1
                        att_tx         = 20
                        att_rx         = 0;
                        bands          = [38];
                        max_pdschReferenceSignalPower = -23;
                        max_rxgain                    = 116;
                        eNB_instances  = [0];
                    }
                );


                THREAD_STRUCT = (
                {
                    #three config for level of parallelism "PARALLEL_SINGLE_THREAD", "PARALLEL_RU_L1_SPLIT", or "PARALLEL_RU_L1_TRX_SPLIT"
                    parallel_config    = "PARALLEL_RU_L1_TRX_SPLIT";
                    #two option for worker "WORKER_DISABLE" or "WORKER_ENABLE"
                    worker_config      = "WORKER_ENABLE";
                }
                );

                log_config =
                    {
                    global_log_level                      ="info";
                    global_log_verbosity                  ="medium";
                    hw_log_level                          ="info";
                    hw_log_verbosity                      ="medium";
                    phy_log_level                         ="info";
                    phy_log_verbosity                     ="medium";
                    mac_log_level                         ="info";
                    mac_log_verbosity                     ="high";
                    rlc_log_level                         ="info";
                    rlc_log_verbosity                     ="medium";
                    pdcp_log_level                        ="info";
                    pdcp_log_verbosity                    ="medium";
                    rrc_log_level                         ="info";
                    rrc_log_verbosity                     ="medium";
                };

        - name  : Config Nº UE's - Remove ue_eurecom_test_sfr.conf file
          shell:  rm openairinterface5g/openair3/NAS/TOOLS/ue_eurecom_test_sfr.conf 
          args:
            chdir: "{{ BASE_DIR_INSTALL_UE }}" 
        
        - name  : Config Nº UE's - Build ue.nfapi.conf file
          copy:
            dest: "{{ BASE_DIR_INSTALL_UE }}/openairinterface5g/openair3/NAS/TOOLS/ue_eurecom_test_sfr.conf"
            content: |
              # List of known PLMNS
              PLMN: {
                  PLMN0: {
                        FULLNAME="Test network";
                        SHORTNAME="OAI4G";
                        MNC="01";
                        MCC="001";

                  };
                  PLMN1: {
                        FULLNAME="SFR France";
                        SHORTNAME="SFR";
                        MNC="10";
                        MCC="208";

                  };
                  PLMN2: {
                        FULLNAME="SFR France";
                        SHORTNAME="SFR";
                        MNC="11";
                        MCC="208";
                  };
                  PLMN3: {
                        FULLNAME="SFR France";
                        SHORTNAME="SFR";
                        MNC="13";
                        MCC="208";
                  };
                  PLMN4: {
                        FULLNAME="OAI LTEBOX";
                        SHORTNAME="OAIALU";
                        MNC="93";
                        MCC="208";
                  };
                  PLMN5: {
                        FULLNAME="T-Mobile USA";
                        SHORTNAME="T-Mobile";
                        MNC="280";
                        MCC="310";
                  };
                  PLMN6: {
                        FULLNAME="FICTITIOUS USA";
                        SHORTNAME="FICTITIO";
                        MNC="028";
                        MCC="310";
                  };
                  PLMN7: {
                        FULLNAME="Vodafone Italia";
                        SHORTNAME="VODAFONE";
                        MNC="10";
                        MCC="222";
                  };
                  PLMN8: {
                        FULLNAME="Vodafone Spain";
                        SHORTNAME="VODAFONE";
                        MNC="01";
                        MCC="214";
                  };
                  PLMN9: {
                        FULLNAME="Vodafone Spain";
                        SHORTNAME="VODAFONE";
                        MNC="06";
                        MCC="214";
                  };
                  PLMN10: {
                        FULLNAME="Vodafone Germ";
                        SHORTNAME="VODAFONE";
                        MNC="02";
                        MCC="262";
                  };
                  PLMN11: {
                        FULLNAME="Vodafone Germ";
                        SHORTNAME="VODAFONE";
                        MNC="04";
                        MCC="262";
                  };
              };

        - name  : Add Ue's
          blockinfile:
            path: /root/{{ BASE_DIR_INSTALL_UE }}/openairinterface5g/openair3/NAS/TOOLS/ue_eurecom_test_sfr.conf
            block: |
                {{ item.ue_id }}:
                  {
                      USER: {
                          IMEI="356113022094149";
                          MANUFACTURER="EURECOM";
                          MODEL="LTE Android PC";
                          PIN="0000";
                      };

                      SIM: {
                          MSIN="00000000{{ ue_idx | int + 1 }}";
                          USIM_API_K="8baf473f2f8fd09487cccbd7097c6862";
                          OPC="e734f8734007d6c5ce7a0508809e7e9c";
                          MSISDN="33638020004";
                      };
                      HPLMN= "20893";
                      UCPLMN_LIST = ();
                      OPLMN_LIST = ("00101", "20810", "20811", "20813", "20893", "310280", "310028");
                      OCPLMN_LIST = ("22210", "21401", "21406", "26202", "26204");
                      FPLMN_LIST = ();
                      EHPLMN_LIST= ();
                  };
            marker: "# {mark} User Equipment {{ item.ue_id }}"
          loop:
            - { ue_id: UE0 }
            - { ue_id: UE1 }
            - { ue_id: UE2 }
            - { ue_id: UE3 }
            - { ue_id: UE4 }
            - { ue_id: UE5 }
            - { ue_id: UE6 }
            - { ue_id: UE7 }
            - { ue_id: UE8 }
            - { ue_id: UE9 }
            - { ue_id: UE10 }
            - { ue_id: UE11 }
            - { ue_id: UE12 }
            - { ue_id: UE13 }
            - { ue_id: UE14 }
            - { ue_id: UE15 }
            - { ue_id: UE16 }
            - { ue_id: UE17 }
            - { ue_id: UE18 }
            - { ue_id: UE19 }
            - { ue_id: UE20 }
            - { ue_id: UE21 }
            - { ue_id: UE22 }
            - { ue_id: UE23 }
            - { ue_id: UE24 }
            - { ue_id: UE25 }
            - { ue_id: UE26 }
            - { ue_id: UE27 }
            - { ue_id: UE28 }
            - { ue_id: UE29 }
            - { ue_id: UE30 }
            - { ue_id: UE31 }
            - { ue_id: UE32 }
            - { ue_id: UE33 }
            - { ue_id: UE34 }
            - { ue_id: UE35 }
            - { ue_id: UE36 }
            - { ue_id: UE37 }
            - { ue_id: UE38 }
            - { ue_id: UE39 }
            - { ue_id: UE40 }
            - { ue_id: UE41 }
            - { ue_id: UE42 }
            - { ue_id: UE43 }
            - { ue_id: UE44 }
            - { ue_id: UE45 }
            - { ue_id: UE46 }
            - { ue_id: UE47 }
            - { ue_id: UE48 }
            - { ue_id: UE49 }
            - { ue_id: UE50 }
            - { ue_id: UE51 }
            - { ue_id: UE52 }
            - { ue_id: UE53 }
            - { ue_id: UE54 }
            - { ue_id: UE55 }
            - { ue_id: UE56 }
            - { ue_id: UE57 }
            - { ue_id: UE58 }
            - { ue_id: UE59 }
            - { ue_id: UE60 }
            - { ue_id: UE61 }
            - { ue_id: UE62 }
            - { ue_id: UE63 }
            - { ue_id: UE64 }
            - { ue_id: UE65 }
            - { ue_id: UE66 }
            - { ue_id: UE67 }
            - { ue_id: UE68 }
            - { ue_id: UE69 }
            - { ue_id: UE70 }
            - { ue_id: UE71 }
            - { ue_id: UE72 }
            - { ue_id: UE73 }
            - { ue_id: UE74 }
            - { ue_id: UE75 }
            - { ue_id: UE76 }
            - { ue_id: UE77 }
            - { ue_id: UE78 }
            - { ue_id: UE79 }
            - { ue_id: UE80 }
            - { ue_id: UE81 }
            - { ue_id: UE82 }
            - { ue_id: UE83 }
            - { ue_id: UE84 }
            - { ue_id: UE85 }
            - { ue_id: UE86 }
            - { ue_id: UE87 }
            - { ue_id: UE88 }
            - { ue_id: UE89 }
            - { ue_id: UE90 }
            - { ue_id: UE91 }
            - { ue_id: UE92 }
            - { ue_id: UE93 }
            - { ue_id: UE94 }
            - { ue_id: UE95 }
            - { ue_id: UE96 }
            - { ue_id: UE97 }
            - { ue_id: UE98 }
            - { ue_id: UE99 }
          loop_control:
            index_var: ue_idx
          when: "ue_idx|int < {{ num_ues }}"

        - name  : Loopback
          become: true
          shell:  |
                sudo ifconfig lo: 127.0.0.2 netmask 255.0.0.0 up

        - name  : Build enB with dependencies - this step can be lazy, wait
          shell: source oaienv && ./cmake_targets/build_oai --eNB -t ETHERNET -c -I --mu
          args:
            chdir: "{{ BASE_DIR_INSTALL_ENB }}/openairinterface5g"
            executable: /bin/bash
          when: build_with_dependecies == 'true'

        - name  : Build enB without dependencies - this step can be lazy, wait
          shell: source oaienv && ./cmake_targets/build_oai --eNB -t ETHERNET -c --mu
          args:
            chdir: "{{ BASE_DIR_INSTALL_ENB }}/openairinterface5g"
            executable: /bin/bash
          when: build_with_dependecies == 'false'

        - name  : Install UE - Remove ue.nfapi.conf file
          shell:  rm openairinterface5g/ci-scripts/conf_files/ue.nfapi.conf 
          args:
            chdir: "{{ BASE_DIR_INSTALL_UE }}" 
        
        - name  : Config UE - Build ue.nfapi.conf file
          copy:
            dest: "{{ BASE_DIR_INSTALL_UE }}/openairinterface5g/ci-scripts/conf_files/ue.nfapi.conf"
            content: |
                log_config = {
                    global_log_level                      ="info";
                    global_log_verbosity                  ="medium";
                    hw_log_level                          ="info";
                    hw_log_verbosity                      ="medium";
                    phy_log_level                         ="info";
                    phy_log_verbosity                     ="medium";
                    mac_log_level                         ="info";
                    mac_log_verbosity                     ="medium";
                    rlc_log_level                         ="info";
                    rlc_log_verbosity                     ="medium";
                    pdcp_log_level                        ="info";
                    pdcp_log_verbosity                    ="medium";
                    rrc_log_level                         ="info";
                    rrc_log_verbosity                     ="full";
                    };


                    L1s = (
                            {
                        num_cc = 1;
                        tr_n_preference = "nfapi";
                            local_n_if_name  = "lo";
                            remote_n_address = "127.0.0.2";
                            local_n_address  = "127.0.0.1";
                            local_n_portc    = 50000;
                            remote_n_portc   = 50001;
                            local_n_portd    = 50010;
                            remote_n_portd   = 50011;
                            }  
                    );

                    RUs = (
                        {		  
                        local_rf       = "yes"
                        nb_tx          = 1
                        nb_rx          = 1
                        att_tx         = 90
                        att_rx         = 0;
                        bands          = [7,38,42,43];
                        max_pdschReferenceSignalPower = -27;
                        max_rxgain                    = 125;
                        }		      
                    );

        - name  : Build UE - this step can be lazy, wait
          shell: source oaienv && ./cmake_targets/build_oai --UE  -x -t ETHERNET -c -I --musim
          args:
            chdir: "{{ BASE_DIR_INSTALL_UE }}/openairinterface5g"
            executable: /bin/bash
          
        - name  : Init NAS UE Layer
          shell: source init_nas_s1 UE
          args:
            chdir: "{{ BASE_DIR_INSTALL_UE }}/openairinterface5g/cmake_targets/tools"
            executable: /bin/bash