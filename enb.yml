---
-   hosts: oaisim-enB
    become: yes
    remote_user: root
    vars:
        COPY_RIGHT: 'ciromacedo@gmail.com'
        BASE_DIR_INSTALL_ENB : "ansible_enB"
        BASE_DIR_INSTALL_UE : "ansible_ue"
    tasks:
        - fail: 
            msg: "'physical_network_interface' not found, this parameter is required!"
          when: physical_network_interface == ''
          
        - name : Remove all old implantation
          become: true
          ignore_errors: true
          shell:  |
                sudo rm -rf {{ BASE_DIR_INSTALL_ENB }}
                sudo rm -rf {{ BASE_DIR_INSTALL_UE }}

        - name : Create enB Directory
          become: true
          shell:  |
                sudo mkdir {{ BASE_DIR_INSTALL_ENB }}
                sudo mkdir {{ BASE_DIR_INSTALL_UE }}

        - name : Install low latency kernel
          become: true
          shell:  |
                apt-get uptade
                sudo apt-get install linux-image-lowlatency linux-headers-lowlatency -y

        - name : Remove grub default file and blacklist.conf
          shell:  | 
                rm /etc/default/grub 
                rm /etc/modprobe.d/blacklist.conf 
                rm /etc/default/cpufrequtils 
        
        - name  : Generate new blacklist.conf file
          copy:
            dest: "/etc/modprobe.d/blacklist.conf"
            content: |
                # This file lists those modules which we don't want to be loaded by
                # alias expansion, usually so some other driver will be loaded for the
                # device instead.

                # evbug is a debug tool that should be loaded explicitly
                blacklist evbug

                # these drivers are very simple, the HID drivers are usually preferred
                blacklist usbmouse
                blacklist usbkbd

                # replaced by e100
                blacklist eepro100

                # replaced by tulip
                blacklist de4x5

                # causes no end of confusion by creating unexpected network interfaces
                blacklist eth1394

                # snd_intel8x0m can interfere with snd_intel8x0, doesn't seem to support much
                # hardware on its own (Ubuntu bug #2011, #6810)
                blacklist snd_intel8x0m

                # Conflicts with dvb driver (which is better for handling this device)
                blacklist snd_aw2

                # Causes trackpads to stop working on Lenovo 11e 2nd gen (Ubuntu: #1802135)
                # and Lenovo x240 to hang on boot (Ubuntu: #1802689)
                blacklist i2c_i801

                # replaced by p54pci
                blacklist prism54

                # replaced by b43 and ssb.
                blacklist bcm43xx

                # most apps now use garmin usb driver directly (Ubuntu: #114565)
                blacklist garmin_gps

                # replaced by asus-laptop (Ubuntu: #184721)
                blacklist asus_acpi

                # low-quality, just noise when being used for sound playback, causes
                # hangs at desktop session start (Ubuntu: #246969)
                blacklist snd_pcsp

                # ugly and loud noise, getting on everyone's nerves; this should be done by a
                # nice pulseaudio bing (Ubuntu: #77010)
                blacklist pcspkr

                # EDAC driver for amd76x clashes with the agp driver preventing the aperture
                # from being initialised (Ubuntu: #297750). Blacklist so that the driver
                # continues to build and is installable for the few cases where its
                # really needed.
                blacklist amd76x_edac

                blacklist intel_powerclamp

        - name  : Generate new grub file
          copy:
            dest: "/etc/default/grub"
            content: |
                # If you change this file, run 'update-grub' afterwards to update
                # /boot/grub/grub.cfg.
                # For full documentation of the options in this file, see:
                #   info -f grub -n 'Simple configuration'

                GRUB_DEFAULT=0
                GRUB_HIDDEN_TIMEOUT=0
                GRUB_HIDDEN_TIMEOUT_QUIET=true
                GRUB_TIMEOUT=10
                GRUB_DISTRIBUTOR=`lsb_release -i -s 2> /dev/null || echo Debian`
                GRUB_CMDLINE_LINUX_DEFAULT="quiet intel_pstate=disable"
                GRUB_CMDLINE_LINUX=""

                # Uncomment to enable BadRAM filtering, modify to suit your needs
                # This works with Linux (no patch required) and with any kernel that obtains
                # the memory map information from GRUB (GNU Mach, kernel of FreeBSD ...)
                #GRUB_BADRAM="0x01234567,0xfefefefe,0x89abcdef,0xefefefef"

                # Uncomment to disable graphical terminal (grub-pc only)
                #GRUB_TERMINAL=console

                # The resolution used on graphical terminal
                # note that you can use only modes which your graphic card supports via VBE
                # you can see them in real GRUB with the command `vbeinfo'
                #GRUB_GFXMODE=640x480

                # Uncomment if you don't want GRUB to pass "root=UUID=xxx" parameter to Linux
                #GRUB_DISABLE_LINUX_UUID=true

                # Uncomment to disable generation of recovery mode menu entries
                #GRUB_DISABLE_RECOVERY="true"

                # Uncomment to get a beep at grub start
                #GRUB_INIT_TUNE="480 440 1"

        - name : Install cpufrequtils
          become: true
          shell:  |
                sudo apt-get install cpufrequtils

        - name  : Generate new cpufrequtils file
          copy:
            dest: "/etc/default/cpufrequtils"
            content: |
                GOVERNOR="performance"

        - name : Update grub
          shell: | 
             update-grub
             sudo update-rc.d ondemand disable
             sudo /etc/init.d/cpufrequtils restart

        - name : Clone openairinterface5g repository - https://gitlab.eurecom.fr/oai/openairinterface5g/
          shell:  git clone --branch v1.0.0 https://gitlab.eurecom.fr/oai/openairinterface5g/ 
          args:
            chdir: "{{ BASE_DIR_INSTALL_ENB }}" 

        - name : Copy enB code to UE
          shell:  cp -r {{ BASE_DIR_INSTALL_ENB }}/openairinterface5g/ {{ BASE_DIR_INSTALL_UE }}/

        - name : Install UE - Remove ue.nfapi.conf file
          shell:  rm openairinterface5g/ci-scripts/conf_files/ue.nfapi.conf 
          args:
            chdir: "{{ BASE_DIR_INSTALL_UE }}" 
        
        - name: Config UE - Build ue.nfapi.conf file
          copy:
            dest: "{{ BASE_DIR_INSTALL_UE }}/openairinterface5g/ci-scripts/conf_files/ue.nfapi.conf"
            content: |
                log_config = {
                    global_log_level                      ="info";
                    global_log_verbosity                  ="medium";
                    hw_log_level                          ="info";
                    hw_log_verbosity                      ="medium";
                    phy_log_level                         ="info";
                    phy_log_verbosity                     ="medium";
                    mac_log_level                         ="info";
                    mac_log_verbosity                     ="medium";
                    rlc_log_level                         ="info";
                    rlc_log_verbosity                     ="medium";
                    pdcp_log_level                        ="info";
                    pdcp_log_verbosity                    ="medium";
                    rrc_log_level                         ="info";
                    rrc_log_verbosity                     ="full";
                    };


                    L1s = (
                            {
                        num_cc = 1;
                        tr_n_preference = "nfapi";
                            local_n_if_name  = "lo";
                            remote_n_address = "127.0.0.2";
                            local_n_address  = "127.0.0.1";
                            local_n_portc    = 50000;
                            remote_n_portc   = 50001;
                            local_n_portd    = 50010;
                            remote_n_portd   = 50011;
                            }  
                    );

                    RUs = (
                        {		  
                        local_rf       = "yes"
                        nb_tx          = 1
                        nb_rx          = 1
                        att_tx         = 90
                        att_rx         = 0;
                        bands          = [7,38,42,43];
                        max_pdschReferenceSignalPower = -27;
                        max_rxgain                    = 125;
                        }		      
                    );

        - name : Install enB - Remove rcc.band7.tm1.nfapi.conf file
          shell:  rm openairinterface5g/ci-scripts/conf_files/rcc.band7.tm1.nfapi.conf 
          args:
            chdir: "{{ BASE_DIR_INSTALL_ENB }}" 

        - name: Config enB - Build rcc.band7.tm1.nfapi.conf
          copy:
            dest: "{{ BASE_DIR_INSTALL_ENB }}/openairinterface5g/ci-scripts/conf_files/rcc.band7.tm1.nfapi.conf"
            content: |
                Active_eNBs = ( "eNB-Eurecom-LTEBox");
                # Asn1_verbosity, choice in: none, info, annoying
                Asn1_verbosity = "none";

                eNBs =
                (
                {
                    ////////// Identification parameters:
                    eNB_ID    =  0xe00;

                    cell_type =  "CELL_MACRO_ENB";

                    eNB_name  =  "eNB-Eurecom-LTEBox";

                    // Tracking area code, 0x0000 and 0xfffe are reserved values
                    tracking_area_code = 1;

                    plmn_list = ( { mcc = 208; mnc = 93; mnc_length = 2; } );

                    tr_s_preference     = "local_mac"

                    ////////// Physical parameters:

                    component_carriers = (
                    {
                    node_function             = "3GPP_eNODEB";
                    node_timing               = "synch_to_ext_device";
                    node_synch_ref            = 0;
                    frame_type					      = "FDD";
                    tdd_config 					      = 3;
                    tdd_config_s            			      = 0;
                    prefix_type             			      = "NORMAL";
                    eutra_band              			      = 7;
                    downlink_frequency      			      = 2685000000L;
                    uplink_frequency_offset 			      = -120000000;
                    Nid_cell					      = 0;
                    N_RB_DL                 			      = 50;
                    Nid_cell_mbsfn          			      = 0;
                    nb_antenna_ports                                = 1;
                    nb_antennas_tx          			      = 1;
                    nb_antennas_rx          			      = 1;
                    tx_gain                                            = 90;
                    rx_gain                                            = 125;
                    pbch_repetition                                 = "FALSE";
                    prach_root              			      = 0;
                    prach_config_index      			      = 0;
                    prach_high_speed        			      = "DISABLE";
                    prach_zero_correlation  			      = 1;
                    prach_freq_offset       			      = 2;
                    pucch_delta_shift       			      = 1;
                    pucch_nRB_CQI           			      = 0;
                    pucch_nCS_AN            			      = 0;
                    pucch_n1_AN             			      = 0;
                    pdsch_referenceSignalPower 			      = -27;
                    pdsch_p_b                  			      = 0;
                    pusch_n_SB                 			      = 1;
                    pusch_enable64QAM          			      = "DISABLE";
                    pusch_hoppingMode                                  = "interSubFrame";
                    pusch_hoppingOffset                                = 0;
                    pusch_groupHoppingEnabled  			      = "ENABLE";
                    pusch_groupAssignment      			      = 0;
                    pusch_sequenceHoppingEnabled		   	      = "DISABLE";
                    pusch_nDMRS1                                       = 1;
                    phich_duration                                     = "NORMAL";
                    phich_resource                                     = "ONESIXTH";
                    srs_enable                                         = "DISABLE";
                    /*  srs_BandwidthConfig                                =;
                    srs_SubframeConfig                                 =;
                    srs_ackNackST                                      =;
                    srs_MaxUpPts                                       =;*/

                    pusch_p0_Nominal                                   = -96;
                    pusch_alpha                                        = "AL1";
                    pucch_p0_Nominal                                   = -104;
                    msg3_delta_Preamble                                = 6;
                    pucch_deltaF_Format1                               = "deltaF2";
                    pucch_deltaF_Format1b                              = "deltaF3";
                    pucch_deltaF_Format2                               = "deltaF0";
                    pucch_deltaF_Format2a                              = "deltaF0";
                    pucch_deltaF_Format2b		    	      = "deltaF0";

                    rach_numberOfRA_Preambles                          = 64;
                    rach_preamblesGroupAConfig                         = "DISABLE";
                    /*
                    rach_sizeOfRA_PreamblesGroupA                      = ;
                    rach_messageSizeGroupA                             = ;
                    rach_messagePowerOffsetGroupB                      = ;
                    */
                    rach_powerRampingStep                              = 4;
                    rach_preambleInitialReceivedTargetPower            = -108;
                    rach_preambleTransMax                              = 10;
                    rach_raResponseWindowSize                          = 10;
                    rach_macContentionResolutionTimer                  = 48;
                    rach_maxHARQ_Msg3Tx                                = 4;

                    pcch_default_PagingCycle                           = 128;
                    pcch_nB                                            = "oneT";
                    bcch_modificationPeriodCoeff			      = 2;
                    ue_TimersAndConstants_t300			      = 1000;
                    ue_TimersAndConstants_t301			      = 1000;
                    ue_TimersAndConstants_t310			      = 1000;
                    ue_TimersAndConstants_t311			      = 10000;
                    ue_TimersAndConstants_n310			      = 20;
                    ue_TimersAndConstants_n311			      = 1;
                    ue_TransmissionMode                                    = 1;

                    //Parameters for SIB18
                    rxPool_sc_CP_Len                                       = "normal";
                    rxPool_sc_Period                                       = "sf40";
                    rxPool_data_CP_Len                                     = "normal";
                    rxPool_ResourceConfig_prb_Num                          = 20;
                    rxPool_ResourceConfig_prb_Start                        = 5;
                    rxPool_ResourceConfig_prb_End                          = 44;
                    rxPool_ResourceConfig_offsetIndicator_present          = "prSmall";
                    rxPool_ResourceConfig_offsetIndicator_choice           = 0;
                    rxPool_ResourceConfig_subframeBitmap_present           = "prBs40";
                    rxPool_ResourceConfig_subframeBitmap_choice_bs_buf              = "00000000000000000000";
                    rxPool_ResourceConfig_subframeBitmap_choice_bs_size             = 5;
                    rxPool_ResourceConfig_subframeBitmap_choice_bs_bits_unused      = 0;
                /*    rxPool_dataHoppingConfig_hoppingParameter                       = 0;
                    rxPool_dataHoppingConfig_numSubbands                            = "ns1";
                    rxPool_dataHoppingConfig_rbOffset                               = 0;
                    rxPool_commTxResourceUC-ReqAllowed                              = "TRUE";
                */
                    // Parameters for SIB19
                    discRxPool_cp_Len                                               = "normal"
                    discRxPool_discPeriod                                           = "rf32"
                    discRxPool_numRetx                                              = 1;
                    discRxPool_numRepetition                                        = 2;
                    discRxPool_ResourceConfig_prb_Num                               = 5;
                    discRxPool_ResourceConfig_prb_Start                             = 3;
                    discRxPool_ResourceConfig_prb_End                               = 21;
                    discRxPool_ResourceConfig_offsetIndicator_present               = "prSmall";
                    discRxPool_ResourceConfig_offsetIndicator_choice                = 0;
                    discRxPool_ResourceConfig_subframeBitmap_present                = "prBs40";
                    discRxPool_ResourceConfig_subframeBitmap_choice_bs_buf          = "f0ffffffff";
                    discRxPool_ResourceConfig_subframeBitmap_choice_bs_size         = 5;
                    discRxPool_ResourceConfig_subframeBitmap_choice_bs_bits_unused  = 0;

                    }
                    );


                    srb1_parameters :
                    {
                        # timer_poll_retransmit = (ms) [5, 10, 15, 20,... 250, 300, 350, ... 500]
                        timer_poll_retransmit    = 80;

                        # timer_reordering = (ms) [0,5, ... 100, 110, 120, ... ,200]
                        timer_reordering         = 35;

                        # timer_reordering = (ms) [0,5, ... 250, 300, 350, ... ,500]
                        timer_status_prohibit    = 0;

                        # poll_pdu = [4, 8, 16, 32 , 64, 128, 256, infinity(>10000)]
                        poll_pdu                 =  4;

                        # poll_byte = (kB) [25,50,75,100,125,250,375,500,750,1000,1250,1500,2000,3000,infinity(>10000)]
                        poll_byte                =  99999;

                        # max_retx_threshold = [1, 2, 3, 4 , 6, 8, 16, 32]
                        max_retx_threshold       =  4;
                    }

                    # ------- SCTP definitions
                    SCTP :
                    {
                        # Number of streams to use in input/output
                        SCTP_INSTREAMS  = 2;
                        SCTP_OUTSTREAMS = 2;
                    };


                    ////////// MME parameters:
                    mme_ip_address      = ( { ipv4       = "CI_MME_IP_ADDR";
                                            ipv6       = "192:168:30::17";
                                            active     = "yes";
                                            preference = "ipv4";
                                            }
                                        );

                    NETWORK_INTERFACES :
                    {
                        ENB_INTERFACE_NAME_FOR_S1_MME            = "{{ physical_network_interface }}";
                        ENB_IPV4_ADDRESS_FOR_S1_MME              = "{{ ansible_default_ipv4.address }}";
                        ENB_INTERFACE_NAME_FOR_S1U               = "{{ physical_network_interface }}";
                        ENB_IPV4_ADDRESS_FOR_S1U                 = "{{ ansible_default_ipv4.address }}";
                        ENB_PORT_FOR_S1U                         = 2152; # Spec 2152
                        ENB_IPV4_ADDRESS_FOR_X2C                 = "{{ ansible_default_ipv4.address }}";
                        ENB_PORT_FOR_X2C                         = 36422; # Spec 36422
                        
                    };
                }
                );

                MACRLCs = (
                    {
                    num_cc = 1;
                        local_s_if_name  = "lo:";			  
                        remote_s_address = "127.0.0.1";
                        local_s_address  = "127.0.0.2"; 
                        local_s_portc    = 50001;	
                        remote_s_portc   = 50000;
                        local_s_portd    = 50011;	
                        remote_s_portd   = 50010;
                    tr_s_preference = "nfapi";
                    tr_n_preference = "local_RRC";
                        }  
                );

                RUs = (
                    {
                        local_rf       = "yes"
                        nb_tx          = 1
                        nb_rx          = 1
                        att_tx         = 20
                        att_rx         = 0;
                        bands          = [38];
                        max_pdschReferenceSignalPower = -23;
                        max_rxgain                    = 116;
                        eNB_instances  = [0];
                    }
                );


                THREAD_STRUCT = (
                {
                    #three config for level of parallelism "PARALLEL_SINGLE_THREAD", "PARALLEL_RU_L1_SPLIT", or "PARALLEL_RU_L1_TRX_SPLIT"
                    parallel_config    = "PARALLEL_RU_L1_TRX_SPLIT";
                    #two option for worker "WORKER_DISABLE" or "WORKER_ENABLE"
                    worker_config      = "WORKER_ENABLE";
                }
                );

                log_config =
                    {
                    global_log_level                      ="info";
                    global_log_verbosity                  ="medium";
                    hw_log_level                          ="info";
                    hw_log_verbosity                      ="medium";
                    phy_log_level                         ="info";
                    phy_log_verbosity                     ="medium";
                    mac_log_level                         ="info";
                    mac_log_verbosity                     ="high";
                    rlc_log_level                         ="info";
                    rlc_log_verbosity                     ="medium";
                    pdcp_log_level                        ="info";
                    pdcp_log_verbosity                    ="medium";
                    rrc_log_level                         ="info";
                    rrc_log_verbosity                     ="medium";
                };

        - name : Loopback
          become: true
          shell:  |
                sudo ifconfig lo: 127.0.0.2 netmask 255.0.0.0 up

        - name : Build enB
          shell: source oaienv && ./cmake_targets/build_oai --eNB -t ETHERNET -c -I --mu
          args:
            chdir: "{{ BASE_DIR_INSTALL_ENB }}/openairinterface5g"
            executable: /bin/bash

        - name : Build UE
          shell: source oaienv && ./cmake_targets/build_oai --UE  -x -t ETHERNET -c -I --musim
          args:
            chdir: "{{ BASE_DIR_INSTALL_UE }}/openairinterface5g"
            executable: /bin/bash
